worker_processes auto;  # = cpus available

events {
    worker_connections 1000;
}

http {
    access_log off;
    sendfile   on;  # copy req buffer directly without file descriptor
    
    upstream api {
        server api01:8080;
        server api02:8080;

        keepalive 64;
    }

    server {
        listen 9999;

        # disable any logs
        access_log off;
        error_log /dev/null crit;

        resolver 127.0.0.11 ipv6=off;
        
        location / {
            proxy_pass http://api;
        }

        location ~ ^/clientes/([0-9]+)/extrato$ {
            rewrite ^/clientes/([0-9]+)/extrato$ /rpc/get_extrato_cliente?clienteid=$1 break;

            proxy_buffering on;
            proxy_set_header Accept 'application/vnd.pgrst.object+json';

            proxy_pass http://api;
        }

        location ~ ^/clientes/([0-9]+)/transacoes$ {
            rewrite_by_lua_block {
                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                if data then
                    local json = require "cjson"
                    local body = json.decode(data)
                    body.clienteid = tonumber(ngx.var[1])
                    ngx.req.set_body_data(json.encode(body))
                else
                    ngx.log(ngx.ERR, "No request body data found")
                end
            }


            rewrite ^/clientes/([0-9]+)/transacoes$ /rpc/realizar_transacao break;

            proxy_buffering on;
            proxy_set_header Content-Type 'application/json';
            proxy_set_header Accept 'application/vnd.pgrst.object+json';

            proxy_pass http://api;
        }
    }
}
